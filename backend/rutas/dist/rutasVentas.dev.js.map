{"version":3,"sources":["rutasVentas.js"],"names":["require","Router","ventas","ruta","get","req","res","snapshot","empty","status","json","error","listaVentas","forEach","doc","push","id","data","params","exists","post","body","IdUsuario","IdProducto","Cantidad","FechaYHora","nuevaVenta","Status","add","docRef","mensaje","put","update","module","exports"],"mappings":"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","sourcesContent":["const { Router } = require('express');\r\nconst { ventas } = require('../bd/conexion'); // Asegúrate de que está bien la conexión\r\nconst ruta = Router();\r\n\r\n// Ruta para mostrar todas las ventas\r\nruta.get('/mostrarVentas', async (req, res) => {\r\n    try {\r\n        const snapshot = await ventas.get();\r\n        if (snapshot.empty) {\r\n            return res.status(404).json({ error: 'No se encontraron ventas' });\r\n        }\r\n        const listaVentas = [];\r\n        snapshot.forEach(doc => {\r\n            listaVentas.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        res.json(listaVentas);\r\n    } catch (error) {\r\n        res.status(500).json({ error: 'Error al obtener ventas' });\r\n    }\r\n});\r\n\r\n// Ruta para buscar venta por ID\r\nruta.get('/:id', async (req, res) => {\r\n    const id = req.params.id;\r\n    try {\r\n        const doc = await ventas.doc(id).get();\r\n        if (!doc.exists) {\r\n            return res.status(404).json({ error: 'Venta no encontrada' });\r\n        }\r\n        res.json({ id: doc.id, ...doc.data() });\r\n    } catch (error) {\r\n        res.status(500).json({ error: 'Error al obtener la venta' });\r\n    }\r\n});\r\n\r\n// Ruta para agregar una nueva venta\r\nruta.post('/agregarVenta', async (req, res) => {\r\n    const { IdUsuario, IdProducto, Cantidad, FechaYHora } = req.body;\r\n    try {\r\n        if (!IdUsuario || !IdProducto || !Cantidad || !FechaYHora) {\r\n            return res.status(400).json({ error: 'Faltan campos obligatorios' });\r\n        }\r\n        const nuevaVenta = {\r\n            IdUsuario,\r\n            IdProducto,\r\n            Cantidad,\r\n            FechaYHora,\r\n            Status: 'vendido',  // El estado inicial es \"vendido\"\r\n        };\r\n        const docRef = await ventas.add(nuevaVenta);\r\n        res.json({ mensaje: 'Venta agregada', id: docRef.id });\r\n    } catch (error) {\r\n        res.status(500).json({ error: 'Error al agregar la venta' });\r\n    }\r\n});\r\n\r\n// Ruta para cancelar (actualizar) una venta por ID\r\nruta.put('/cancelarVenta/:id', async (req, res) => {\r\n    const id = req.params.id;\r\n    try {\r\n        const doc = await ventas.doc(id).get();\r\n        if (!doc.exists) {\r\n            return res.status(404).json({ error: 'Venta no encontrada para cancelar' });\r\n        }\r\n        await ventas.doc(id).update({ Status: 'cancelado' });  // Cambia el estatus a \"cancelado\"\r\n        res.json({ mensaje: 'Venta cancelada con éxito' });\r\n    } catch (error) {\r\n        res.status(500).json({ error: 'Error al cancelar la venta' });\r\n    }\r\n});\r\n\r\nmodule.exports = ruta;"],"file":"rutasVentas.dev.js"}